PowSum
--------

int tmp = pow(m,p);
 if(tmp == n) return 1;
 if(tmp > n) return 0;
return the_power_sum(n,m+1,p) + the_power_sum(n-tmp, m+1,p);

---------------------------------------------------------------------------------------------

Counter
--------

scanf("%d",&t);
 for(i=0;i<t;++i)
 {
 win=0;
 scanf("%lu",&n);
 if(n==1)
 printf("Richard\n");
 else
 {
 while(n!=1)
 {
 if(isPow2(n))
 n>>=1;
 else
 n-=largePow(n);
 ++win;
 }
 }
 if(win%2==0)
 printf("Richard\n");
 else
 printf("Louise\n");
 }
 return 0;

return !(n&(n-1));
-------------------------------------------------------------------------------------------

Max XOR
--------

int max = 0,i,j;
 for(i=l;i<r;i++)
 for(j=i+1;j<=r;j++)
 max = max<(i^j)?i^j:max;
 return max;

-------------------------------------------------------------------------------------------

Sum vs XOR
-----------

while(n>0){
if(n%2==0)m*=2;
n/=2;
}
printf("%lld\n",m)

-------------------------------------------------------------------------------------------

Flipping Bits
--------------

scanf("%d", &t);
 while(t-- > 0) {
 scanf("%u", &n);
 printf("%u\n", ~n);
 }

-------------------------------------------------------------------------------------------